;
; OSI SUPERBOARD II/CHALLENGER 1P MONITOR ROM DISASSEMBLY
;
; BASED ON BINARY IMAGE FILE: "C1S.ROM"
;

BASIC	=	$A000	; BASIC ROM
DISK	=	$C000	; DISK CONTROLLER
SCREEN	=	$D000	; SCREEN RAM
KEYBD	=	$DF00	; KEYBOARD
ACIA	=	$F000	; SERIAL PORT (MC6850 ACIA)

; BASIC ROUTINES

LA27D	=	BASIC+$027D	;
LA295	=	BASIC+$0295	;
LA280	=	BASIC+$0280	;
LA3A6	=	BASIC+$03A6	;
LA5F6	=	BASIC+$05F6	;
LA63D	=	BASIC+$063D	; CTRL-C HANDLER
LA866	=	BASIC+$0866	;
LA86C	=	BASIC+$086C	;
LA8C3	=	BASIC+$08C3	;
LB953	=	BASIC+$1953	;
LBD22	=	BASIC+$1D22	; BASIC COLD START
LBFF3	=	BASIC+$1FF3	; SCREEN RAM FILL ROUTINE

	*=	$F800

; OUTPUT CHAR TO SCREEN

LF800
	STA	$202	; PARK CHAR
	PHA
	TXA
	PHA
	TYA
	PHA
	LDA	$202
	LDY	#0
	NOP
	CMP	#$19
	BNE	LF815
	JSR	LFF58	; CTRL-Y	;set 48x16 mode

LF815
	CMP	#$18
	BNE	LF81C
	JSR	LFF47	; CTRL-X	;24x24 mode

LF81C
	CMP	#$A
	BNE	LF823
	JSR	LF8D5	; LF

LF823
	CMP	#$D
	BNE	LF82A
	JSR	LF9B9	; CR

LF82A
	CMP	#$5F
	BNE	LF831
	JSR	LF9E0	; '_' (RUBOUT)

LF831
	CMP	#3
	BNE	LF838
	JSR	LFA1B	; CTRL-C clear screen

LF838
	CMP	#2
	BNE	LF83F
	JSR	LF993	; CTRL-B beginning

LF83F
	CMP	#1
	BNE	LF846
	JSR	LF954	; CTRL-A erase to end of screen

LF846
	CMP	#5
	BNE	LF84D
	JSR	LF9C5	; CTRL-E erase to end of line

LF84D
	CMP	#$12
	BNE	LF854
	JSR	LFA38	; CTRL-R right

LF854
	CMP	#$15
	BNE	LF85B
	JSR	LFA27	; CTRL-U up

LF85B
	CMP	#$C
	BNE	LF862
	JSR	LFA21	; CTRL-L left

LF862
	CMP	#$1A
	BNE	LF869
	JSR	LFF52	; CTRL-Z erase & home

LF869	CMP	#7
	BNE	LF870
	JSR	LFBD0	; BELL

LF870
	CMP	#9
	BNE	LF877
	JSR	LFA44	; TAB

LF877
	CMP	#4
	BNE	LF87E
	JSR	LFA7C	; CTRL-D down

LF87E
	CMP	#$20
	BCC	LF885	; OTHER CTRL CHAR
	JSR	LFA3E

LF885
	PLA
	TAY
	PLA
	TAX
	PLA
	RTS

LF88B
	LDA	#0
	STA	$22D
	LDA	$22A
	STA	$22C
	LDX	#5
LF898
	ASL	$22C
	ROL	$22D
	DEX
	BNE	LF898
	LDA	$226
	BEQ	LF8AC
	ASL	$22C
	ROL	$22D
LF8AC
	CLC
	LDA	$229
	ADC	$22C
	STA	$22C
	LDA	#$D0
	ADC	$22D
	STA	$22D
	RTS

LF8BF
	LDA	$201
LF8C2
	LDY	#$8D
LF8C4
	STY	$22B
	LDY	#$60
	STY	$22E
	LDY	#0
	JMP	$22B

LF8D1
	LDY	#$AD
	BNE	LF8C4

; LF

LF8D5
	JSR	LF8BF
	LDA	$22A
	CMP	$225
	BCS	LF8E6
	INC	$22A
	JMP	LF8E9

LF8E6
	JMP	LF907

LF8E9
	LDA	#$5F	;underscore
	LDX	$227
	BMI	LF8F2
	LDA	#$BB	;halftone block

LF8F2
	STA	$201

LF8F5
	JSR	LF88B
	JSR	LF8D1
	TAX
	LDA	$201
	JSR	LF8C2
	STX	$201
	TYA
	RTS

LF907
	CLC
	LDX	#8-1
LF90A
	LDA	LBFF3,X
	STA	$207,X
	DEX
	BPL	LF90A

	LDA	$224
	STA	$22A
LF919
	LDA	$222
	STA	$229
	JSR	LF88B
	LDA	$22C
	LDX	$22D
	STA	$20B
	STX	$20C
	LDA	$22A
	CMP	$225
	BCS	LF94E
	INC	$22A
	JSR	LF88B
	LDA	$22C
	LDX	$22D
	STA	$208
	STX	$209
	JSR	LF982
	JMP	LF919

LF94E
	LDA	$222
	STA	$229

; CTRL-A

LF954
	LDA	$22A
	PHA
	LDA	$229
	PHA
LF95C
	LDA	#' '
	JSR	LF8F2
	LDA	$229
	CMP	$223
	BCC	LF971
	LDA	$22A
	CMP	$225
	BCS	LF977
LF971
	JSR	LF9A5
	JMP	LF95C

LF977
	PLA
	STA	$229
	PLA
	STA	$22A
	JMP	LF8E9

LF982
	LDY	#0
LF984
	JSR	$207
	INC	$229
	LDA	$223
	CMP	$229
	BCS	LF984
	RTS

; CTRL-B

LF993
	JSR	LF8BF

LF996
	LDA	$224
	STA	$22A
	JMP	LF9BC

LF99F
	.BYTE 'DCWM',7,0

LF9A5
	LDA	$229
	CMP	$223
	BCS	LF9B3
	INC	$229
	JMP	LF8E9

LF9B3
	JMP	LFCD5

LF9B6
	JMP	LF8D5

; CR

LF9B9
	JSR	LF8BF

LF9BC
	LDA	$222
	STA	$229
	JMP	LF8E9

; CTRL-E

LF9C5
	LDA	$22A
	PHA
	LDA	$229
	PHA
LF9CD
	LDA	#' '
	JSR	LF8F2
	LDA	$229
	CMP	$223
	BCS	LF977
	JSR	LF9A5
	JMP	LF9CD

; RUBOUT ('_')

LF9E0
	LDA	#' '
	JSR	LF8F2
	JSR	LF9F0
	LDA	#' '
	JSR	LF8F2
	JMP	LF8E9

LF9F0
	LDA	$222
	CMP	$229
	BCS	LF9FE
	DEC	$229
	JMP	LF8E9

LF9FE
	LDA	$223
	STA	$229
	LDA	$224
	CMP	$22A
	BCS	LFA12
	DEC	$22A
	JMP	LF8E9

LFA12
	LDA	$222
	STA	$229
	JMP	LF8E9

; CTRL-C

LFA1B
	JSR	LF993
	JMP	LF954

; CTRL-L

LFA21
	JSR	LF8BF
	JMP	LF9F0

; CTRL-U

LFA27
	JSR	LF8BF
	LDA	$224
	CMP	$22A
	BCS	LFA35
	DEC	$22A
LFA35
	JMP	LF8E9

; CTRL-R

LFA38
	JSR	LF8BF
	JMP	LF9A5

; ASCII CHAR $20-

LFA3E
	JSR	LF8F2
	JMP	LF9A5

; TAB

LFA44
	LDA	#$20 ; ' '
	JSR	LF8C2
	LDA	$22A
	PHA
	LDA	$229
	PHA
LFA51
	LDA	$229
	CMP	$223
	BCS	LFA62
	INC	$229
	JSR	LF8F5
	JMP	LFA51

LFA62
	LDA	$222
	STA	$229
	LDA	$22A
	CMP	$225
	BCS	LFA79
	INC	$22A
	DEC	$229
	JMP	LFA51

LFA79
	JMP	LF977

; CTRL-D

LFA7C
	LDA	$229
	PHA
	LDA	$22A
	PHA
	LDA	$223
	STA	$229
	LDA	$225
	STA	$22A
	LDX	#$20 ; ' '
	STX	$2FF
LFA95
	LDA	$2FF
	STX	$2FF
	JSR	LF8F2
	PLA
	CMP	$22A
	BEQ	LFAAB
LFAA4
	PHA
	JSR	LF9F0
	JMP	LFA95

LFAAB
	TAX
	PLA
	CMP	$229
	BNE	LFAB5
	JMP	LF8E9

LFAB5
	PHA
	TXA
	JMP	LFAA4

	NOP

LFABB
	LDY	$88
	INY
	BNE	LFAC9
	LDY	$227
	BPL	LFACA
	CMP	#$D
	BEQ	LFB3D
LFAC9
	RTS

LFACA
	INX
	CMP	#$D
	BEQ	LFAD9
	CMP	#$1B
	BEQ	LFADE
	JSR	LF800
	JMP	LFFB3

LFAD9
	LDA	$227
	BNE	LFAE3
LFADE
	LDA	#$FF
	STA	$227	;disable editor
LFAE3
	PLA
	PLA
	PLA
	PLA
	PLA
	PLA
	JSR	LF993

LFAEC
	CPX	#$20 ; ' '
	BNE	LFB08
	JSR	LF9A5
	LDA	$229
	CMP	$223
	BNE	LFAEC
	LDA	$22A
	CMP	$225
	BNE	LFAEC
	LDX	#0
	JMP	LFB2C

LFB08
	LDA	#0
	PHA
LFB0B
	PLA
	TAX
	LDA	$201
	CPX	#$47
	BCS	LFB22
	STA	$13,X
	INX
	TXA
	PHA
	JSR	LF8BF
	JSR	LF9A5
	JMP	LFB0B

LFB22
	DEX
	BEQ	LFB2B
	LDY	$13,X
	CPY	#$20 ; ' '
	BEQ	LFB22
LFB2B
	INX
LFB2C
	LDY	#0
	STY	$13,X
	JSR	LFA1B
	JSR	LFBC7
	LDX	#$12
	LDY	#0
	JMP	LA280

LFB3D
	PLA
	PLA
	PLA
	PLA
	PLA
	PLA
	JSR	LA866
	STX	$C3
	STY	$C4
	JMP	LFCE7

LFB4D
	BNE	LFB52
LFB4F
	JMP	LA27D

LFB52
	LDX	#$FF
	STX	$88
	BCS	LFB5B
	JMP	LA295

LFB5B
	JSR	LA3A6
	JSR	$00BC
	CMP	#$99
	BEQ	LFBA0
	CMP	#$89
	BEQ	LFBA0
	CMP	#$9B
	BEQ	LFBA0
	CMP	#$45
	BNE	LFBA3
	JSR	$00BC
	BNE	LFB80
	LDA	#1
	STA	$227	;enable editor
	JSR	LFA1B
	BEQ	LFB4F
LFB80
	BCS	LFBA3
	CMP	#$30 ; '0'
	BEQ	LFBA3
LFB86
	JSR	$00BC
	BEQ	LFB8F
	BCC	LFB86
	BCS	LFBA3
LFB8F
	LDA	#0
	STA	$227
	LDA	#$FB
	LDY	#$B5
	STA	$5
	STY	$4
	LDA	#$99
	STA	$13
LFBA0
	JSR	LFA1B

LFBA3
	LDY	#0
	LDX	#$12
	STX	$C3
	STY	$C4
	JMP	LA5F6

LFBAE
	LDA	#<LFBBA
	LDY	#>LFBBA
	JSR	LA8C3
	LDA	#$FF
	STA	$88
	RTS

LFBBA
	.BYTE	$D,$A
	.BYTE	'ready'
	.BYTE	$D
LFBC2
	.BYTE	$A
	.BYTE	7
	.BYTE	7
	.BYTE	0
	.BYTE	0

LFBC7
	LDA	#<LFBAE
	STA	$4
	LDA	#>LFBAE
	STA	$5
	RTS

; BELL

LFBD0
	LDY	$203	; LOAD FLAG
	BEQ	LFBD6
	RTS

LFBD6
	LDY	#100
LFBD8
	LDX	#$60
	JSR	LFBF0	; RTS LOW
LFBDD
	DEX
	BNE	LFBDD
	LDX	#$60
	JSR	LFBF3	; RTS HIGH
LFBE5
	DEX
	BNE	LFBE5
	DEY
LFBE9
	BNE	LFBD8
	TYA
	RTS

; INIT ACIA

LFBED
	LDA	#$53	; RESET
	.BYTE	$2C

LFBF0
	LDA	#$11	; /16, 8BITS, 2STOP, RTS=LOW
	.BYTE	$2C

LFBF3
	LDA	#$51	; /16, 8BITS, 2STOP, RTS=HIGH
	STA	ACIA
	RTS

LFBF9
	LDY	#0
	JMP	LFCA6

; FLOPPY DISK BOOTSTRAP

LFBFE
	LDY	#0
	STY	DISK+$01
	STY	DISK
	LDX	#4
	STX	DISK+$01
	STY	DISK+$03
	DEY
	STY	DISK+$02
	STX	DISK+$03
	STY	DISK+$02
	LDA	#$FB
	BNE	LFC25
LFC1C
	LDA	#2
	BIT	DISK
	BEQ	LFC3F
	LDA	#$FF
LFC25
	STA	DISK+$02
	JSR	LFC99
	AND	#$F7
	STA	DISK+$02
	JSR	LFC99
	ORA	#8
	STA	DISK+$02
	LDX	#$18
	JSR	LFC85
	BEQ	LFC1C
LFC3F
	LDX	#$7F
	STX	DISK+$02
	JSR	LFC85

LFC47
	LDA	DISK
	BMI	LFC47
LFC4C
	LDA	DISK
	BPL	LFC4C
	LDA	#3
	STA	DISK+$10
	LDA	#$58
	STA	DISK+$10
	JSR	LFC90
	STA	$FE
	TAX
	JSR	LFC90
	STA	$FD
	JSR	LFC90
	STA	$FF
	LDY	#0
LFC6D
	JSR	LFC90
	STA	($FD),Y
	INY
	BNE	LFC6D
	INC	$FE
	DEC	$FF
	BNE	LFC6D
	STX	$FE
	LDA	#$FF
	STA	DISK+$02
	JMP	($FD)

LFC85
	LDY	#$F8
LFC87
	DEY
	BNE	LFC87
	EOR	$FF,X
	DEX
	BNE	LFC85
	RTS

LFC90
	LDA	DISK+$10
	LSR	A
	BCC	LFC90
	LDA	DISK+$11
LFC99
	RTS

	NOP

	JSR	LA86C
	JSR	LB953
	JSR	LFF9B

	NOP
	NOP

; SPACE KEY CHECK

LFCA6
	LDA	#$FD
	STA	KEYBD
	LDA	#$10
	BIT	KEYBD
	RTS

; OUTPUT CHAR TO ACIA

LFCB1
	PHA
LFCB2
	LDA	ACIA
	LSR	A
	LSR	A
	BCC	LFCB2	; WAIT
	PLA
	STA	ACIA+1	; OUTPUT CHAR
	RTS

; SET KEYBOARD ROW (A)  1=R0, 2=R1, 4=R2 ETC

LFCBE
	EOR	#$FF
	STA	KEYBD
	EOR	#$FF
	RTS

; READ KEYBOARD COL (X)  1=C0, 2=C1, 4=C2, 0=NONE

LFCC6
	PHA
	JSR	LFCCF
	TAX
	PLA
	DEX
	INX
	RTS

LFCCF
	LDA	KEYBD
	EOR	#$FF
	RTS

LFCD5
	LDA	$203
	BMI	LFCDD
	BPL	LFCE1
LFCDC
	RTS

LFCDD
	CMP	#$FF
	BNE	LFCDC
LFCE1
	JSR	LF9BC
	JMP	LF8D5

LFCE7
	JSR	LFBC7
	JSR	$00BC
	JMP	LFB4D

; KEYBOARD SCAN

LFCF0
	STA	KEYBD
	BIT	KEYBD
	RTS

LFCF7
	CPX	#0
	BNE	LFD00
	LDA	#7
	JSR	LF800

; POLLED KEYBOARD INPUT ROUTINE

LFD00
	TXA
	PHA
	TYA
	PHA

LFD04
	LDA	#1	; ROW 0
LFD06
	JSR	LFCBE	; SET ROW
	JSR	LFCC6	; READ COL
	BNE	LFD20	; KEY PRESSED
LFD0E
	ASL	A	; NEXT ROW
	BNE	LFD06	; UNTIL DONE

LFD11
	LDA	#0
	STA	$216
LFD16
	STA	$215
	LDA	#2
	STA	$214
	BNE	LFD04

LFD20
	LSR	A
	BCC	LFD2C
	ROL	A
	CPX	#$21	; ??? SHIFT + ESC KEY
	BNE	LFD0E
	LDA	#$1B
	BNE	LFD4D

LFD2C
	JSR	LFDC6
	TYA
	STA	$213
	ASL	A
	ASL	A
	ASL	A
	SEC
	SBC	$213
	STA	$213
	TXA
	LSR	A
	JSR	LFDC6
	BNE	LFD11
	CLC
	TYA
	ADC	$213
	TAY
	LDA	LFDCD,Y

LFD4D
	CMP	$215
	BNE	LFD16	; NOT SAME AS LAST
	DEC	$214
	BEQ	LFD63

; DELAY ~5MS

	LDY	#5
LFD59
	LDX	#200
LFD5B
	DEX
	BNE	LFD5B
	DEY
	BNE	LFD59
	BEQ	LFD04

;

LFD63
	LDX	#$96
	CMP	$216
	BNE	LFD6C
	LDX	#$14
LFD6C
	STX	$214
	STA	$216

	LDA	#1
	JSR	LFCBE
	JSR	LFCCF
	TAX

	LDY	#$A0
	LSR	A
	CMP	#$20	; ??? ESC KEY
	BEQ	LFDAB

	LDY	#0
	CMP	#$10	; ???
	BEQ	LFDAB

	TXA
	LSR	A
	BCC	LFD97

LFD8C
	AND	#$FF
	BNE	LFDA9
	LDA	$215
	BMI	LFDAB
	BPL	LFDA2

LFD97
	LDX	$215
	CPX	#$51
	BCC	LFD8C
	AND	#$FF
	BEQ	LFDAB
LFDA2
	LDY	#$E0
	LDA	$215
	BPL	LFDAB

LFDA9
	LDY	#$F0
LFDAB
	LDA	$215
	CMP	#$21
	BCC	LFDBB
	STY	$213
	CLC
	ADC	$213
	AND	#$7F
LFDBB
	STA	$213
	PLA
	TAY
	PLA
	TAX
	LDA	$213
	RTS

LFDC6
	LDY	#8
LFDC8
	DEY
	ASL	A
	BCC	LFDC8
	RTS

; KEYBOARD MATRIX

LFDCD
	.BYTE	'p',$BB,'O',$20,'z','a','q'
	.BYTE	'L','m','n','b','v','c','x'
	.BYTE	'k','j','h','g','f','d','s'
	.BYTE	'i','u','y','t','r','e','w'
	.BYTE	$00,$00,$0D,$0A,'o','l','N'
	.BYTE	$00,$DF,'M',$BA,'P',$B9,$B8
	.BYTE	$B7,$B6,$B5,$B4,$B3,$B2,$B1

	.BYTE	$EA
	.BYTE	$EA

; 65V MONITOR

LFE00
	LDX	#$28
	TXS
	CLD
	BNE	LFE0C

LFE06
	LDX	#>SCREEN+8
	LDA	#>SCREEN
	BNE	LFE2D

LFE0C
	JSR	LFE06
	BEQ	LFE43
LFE11
	JSR	LFEE9
	CMP	#'/'
	BEQ	LFE4F
	CMP	#'G'
	BEQ	LFE4C
	CMP	#'L'
	BEQ	LFE7C
	JSR	LFE93
	BMI	LFE11
	LDX	#2
	JSR	LFEDA
	JMP	LFE43

LFE2D
	STA	$FF
	LDA	#0
	STA	$FE
	STA	$FB
	TAY
	LDA	#' '
LFE38
	STA	($FE),Y
	INY
	BNE	LFE38
	INC	$FF
	JMP	LFE8C
	NOP

LFE43
	LDA	($FE),Y
	STA	$FC
	JSR	LFEAC
	BNE	LFE11

; 'G'	GO

LFE4C
	JMP	($FE)

; '/'	DATA MODE

LFE4F
	JSR	LFEE9
	CMP	#'.'
	BEQ	LFE11	; ADDRESS MODE
	CMP	#$D
	BNE	LFE69
	INC	$FE
	BNE	LFE60
	INC	$FF
LFE60
	LDY	#0
	LDA	($FE),Y
	STA	$FC
	JMP	LFE77

LFE69
	JSR	LFE93
	BMI	LFE4F
	LDX	#0
	JSR	LFEDA
	LDA	$FC
	STA	($FE),Y
LFE77
	JSR	LFEAC
	BNE	LFE4F

; 'L'	LOAD

LFE7C
	STA	$FB
	BEQ	LFE4F

; INPUT CHAR FROM ACIA

LFE80
	LDA	ACIA
	LSR	A
	BCC	LFE80
	LDA	ACIA+1
	AND	#$7F	; CLEAR BIT 7
	RTS

LFE8C
	CPX	$FF
	BNE	LFE38
	STY	$FF
	RTS

; CONVERT ASCII-HEX CHAR TO BINARY

LFE93
	CMP	#'0'
	BMI	LFEA9
	CMP	#'9'+1
	BMI	LFEA6
	CMP	#'A'
	BMI	LFEA9
	CMP	#'F'+1
	BPL	LFEA9
	SEC
	SBC	#7
LFEA6
	AND	#$F
	RTS

LFEA9
	LDA	#$80
	RTS

LFEAC
	LDX	#3
	LDY	#0
LFEB0
	LDA	$FC,X
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	JSR	LFECA
	LDA	$FC,X
	JSR	LFECA
	DEX
	BPL	LFEB0
	LDA	#' '
	STA	SCREEN+$153
	STA	SCREEN+$154
	RTS

LFECA
	AND	#$F
	ORA	#'0'
	CMP	#'9'+1
	BMI	LFED5
	CLC
	ADC	#7
LFED5
	STA	SCREEN+$14F,Y
	INY
	RTS

LFEDA
	LDY	#4
	ASL	A
	ASL	A
	ASL	A
	ASL	A
LFEE0
	ROL	A
	ROL	$FC,X
	ROL	$FD,X
	DEY
	BNE	LFEE0
	RTS

LFEE9
	LDA	$FB
	BNE	LFE80
	JMP	LFD00

LFEF0
	.WORD	LFFBA	; 218	INPUT
	.WORD	LFF69	; 21A	OUTPUT
	.WORD	LFF9B	; 21C	CTRL-C
	.WORD	LFF8B	; 21E	LOAD
	.WORD	LFF96	; 220	SAVE
	.BYTE	$05	; 222
	.BYTE	$1C	; 223
	.BYTE	$04	; 224
	.BYTE	$1C	; 225
	.BYTE	$00	; 226
	.BYTE	$FF	; 227 editor enable flag

; POWER ON RESET

LFF00
	CLD
	LDX	#$28
	TXS
	JSR	LFBED	;reset ACIA
	LDY	#0
	TYA
LFF0A
	STA	$201-1,X
	DEX
	BNE	LFF0A
	JSR	LFF47	;init i/o vectors

LFF13
	LDA	LF99F,Y	; 'DCWM'
	BEQ	LFF1E
	JSR	LF800
	INY
	BNE	LFF13

LFF1E
	JSR	LFFBA
	CMP	#'M'
	BNE	LFF28
	JMP	LFE00

LFF28
	CMP	#'W'
	BNE	LFF32
	STA	$228
	JMP	$0000

LFF32
	CMP	#'C'
	BNE	LFF40
	STA	$228
	LDY	#0
	STY	$88
	JMP	LBD22

LFF40
	CMP	#'D'
	BNE	LFF00
	JMP	LFBFE

; CTRL-X

LFF47
	LDA	LFEF0,Y
	STA	$218,Y
	INY
	CPY	#16
	BNE	LFF47

; CTRL-Z

LFF52
	JSR	LFE06
	JMP	LF996

; CTRL-Y

LFF58
	LDA	LFF65,Y
	STA	$222,Y
	INY
	CPY	#5
	BNE	LFF58
	BEQ	LFF52

LFF65
	.BYTE	$0B
	.BYTE	$3A
	.BYTE	$02
	.BYTE	$0D

; OUTPUT ROUTINE

LFF69
	JSR	LF800	; CHAR TO SCREEN

; CHAR TO ACIA WITH NULLS AFTER CR

LFF6C
	PHA
	LDA	$205
	BEQ	LFF89	; SAVE FLAG OFF
	PLA
	JSR	LFCB1	; CHAR TO ACIA
	CMP	#$D
	BNE	LFF8A	; NOT CR
	PHA
	TXA
	PHA
	LDX	#10	; 10 NULLS
	LDA	#0
LFF81
	JSR	LFCB1
	DEX
	BNE	LFF81
	PLA
	TAX
LFF89
	PLA
LFF8A
	RTS

; LOAD ROUTINE

LFF8B
	PHA
	DEC	$203	; SET LOAD FLAG
	LDA	#0	; CLR SAVE FLAG
LFF91
	STA	$205
	PLA
LFF95
	RTS

; SAVE ROUTINE

LFF96
	PHA
	LDA	#1	; SET SAVE FLAG
	BNE	LFF91

; CTRL-C CHECK ROUTINE

LFF9B
	LDA	$212
	BNE	LFF95	; DISABLE FLAG SET
LFFA0
	JSR	LFCA6
	BEQ	LFFA0
	JSR	LFFE3
	BVS	LFF95
	JSR	LFFE6
	BVS	LFF95
	SEC		; CTRL-C PRESSED
	JMP	LA63D

LFFB3
	JSR	LFCF7
	JMP	LFABB

	NOP

; INPUT

LFFBA
	BIT	$203
	BPL	LFFD7	; LOAD FLAG CLR
	NOP
	NOP
	NOP
LFFC2
	JSR	LFBF9
	BEQ	LFFD4	; SPACE KEY PRESSED
	LDA	ACIA
	LSR	A
	BCC	LFFC2	; WAIT ACIA
	NOP
	NOP
	NOP
	LDA	ACIA+1	; GET CHAR
	RTS

LFFD4
	STY	$203
LFFD7
	LDA	$228
	BNE	LFFB3
	JMP	LFD00

	.BYTE	$EA

LFFE0	.BYTE	$65	; LINE START (OFFSET FROM $D300)
LFFE1	.BYTE	$17	; LINE LENGTH - 1
LFFE2	.BYTE	0	; SCREEN RAM 0=1K, 1=2K

LFFE3	
	LDA	#$FE	; SCAN R0
	.BYTE	$2C
LFFE6
	LDA	#$FB	; SCAN R2
	JMP	LFCF0

LFFEB	JMP	($218)	; INPUT  FFBA
LFFEE	JMP	($21A)	; OUTPUT FF69
LFFF1	JMP	($21C)	; CTRL-C FF9B
LFFF4	JMP	($21E)	; LOAD   FF8B
LFFF7	JMP	($220)	; SAVE   FF96

	.WORD	$130	; NMI
	.WORD	LFF00	; RESET
	.WORD	$1C0	; IRQ

	.END
